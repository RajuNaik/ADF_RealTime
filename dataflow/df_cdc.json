{
	"name": "df_cdc",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_ff_cdc",
						"type": "DatasetReference"
					},
					"name": "SrcFF"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_cdc",
						"type": "DatasetReference"
					},
					"name": "SrcSQL"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_cdc",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "exists1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as integer,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcFF",
				"source(output(",
				"          EMPLOYEE_ID as integer,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SrcSQL",
				"SrcFF derive(file_sha2 = sha2(256,columns())) ~> derivedColumn1",
				"SrcSQL derive(sql_sha2 = sha2(256,columns())) ~> derivedColumn2",
				"derivedColumn1, derivedColumn2 exists(file_sha2 == sql_sha2,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EMPLOYEE_ID as integer,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['EMPLOYEE_ID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          EMPLOYEE_ID,",
				"          FIRST_NAME,",
				"          LAST_NAME,",
				"          EMAIL,",
				"          PHONE_NUMBER",
				"     )) ~> sink1"
			]
		}
	}
}